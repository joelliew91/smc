BesselI(complex(real=1,imaginary=10),nu=10)
library(Bessel)
BesselI(complex(real=1,imaginary=10),nu=10)
sd(c(1,2,3))
rbeta(10,1,1)
curve(dbeta(x,1,1))
curve(dbeta(x,1/7,1))
dgamma(0,1,1)
?dgamma
dgamma(-1,1,1)
dgamma(-10,1,1)
rgamma(100,1,1)
a=rgamma(100,1,1)
source('~/Desktop/FYP-Codes/new/code.R')
source('~/Desktop/FYP/new/code.R')
source('~/Desktop/FYP/new/code.R')
?sim_svvg
sim_svvg
sim_svvg(1)
data=sim_svvg(1)
write.csv(data$y,file='data.csv')
get.wd()
getwd()
ls -f
write.csv(data$y,file='~/Desktop/data.csv')
curve(dgamma(x,1.0,0.5))
curve(dgamma(x,1.0,0.5),xlim=c(0,100))
curve(dgamma(x,1.0,0.5),xlim=c(0,100),ylim=c(0,100))
curve(dgamma(x,1.0,0.5),xlim=c(0,100),ylim=c(0,10))
curve(dgamma(x,1.0,0.5),xlim=c(0,100),ylim=c(0,5))
curve(dgamma(x,1.0,0.5),xlim=c(0,100),ylim=c(0,2))
curve(dgamma(x,1.0,0.5),xlim=c(0,100),ylim=c(0,1))
curve(dgamma(x,1.0,0.5),xlim=c(0,100),ylim=c(0,0.6))
rgamma(100,1.0,0.5)
?lasso
set.seed(1)
library(MASS)
attach(Boston)
names(Boston)
head(Boston)
m1 = lm(medv~lstat)
m1
summary(m1)
print(m1)
plot(lstat,medv)
plot(lstat,medv,pch=20)
abline(m1,col='red',lwd=3)
library(ISLR)
attach(Hitters)
head(Hitters)
Hitters = na.omit(Hitters)
names(Hitters)
Hitters[,-1]
head(Hitters[,-1])
head(Hitters[,-2])
Hitters = Hitters[,names(Hitters) %in% c('League','Division','NewLeague')]
head(Hitters)
attach(Hitters)
head(Hitters)
attach(Hitters)
head(Hitters)
Hitters = Hitters[,!(names(Hitters) %in% c('League','Division','NewLeague'))]
head(Hitters)
library(corrplot)
corrplot(cor(Hitters),type=)
corrplot(cor(Hitters),type='upper',order='hclust',t1.col='black',t1.srt=20)
corrplot(cor(Hitters),type='upper',order='hclust',t1.col='black',t1.srt=45)
Hitters = na.omit(Hitters)
corrplot(cor(Hitters),type='upper',order='hclust',t1.col='black',t1.srt=20)
library(glmnet)
warnings()
x = m.matrix(Salary ~.,Hitters)
x = model.matrix(Salary ~.,Hitters)
?model.matrix
head(x)
x = model.matrix(Salary ~.,Hitters)[,-1]
head(x)
y = Hitters$Salary
n = length(y)
train_index = sample(1:n,0.5*n,replace=F)
x_t = x[,train_index]
x_t = x[train_index,]
y_t = y[train_index,]
y_t = y[train_index]
x_test - x[-train_index,]
x_test = x[-train_index,]
y_test = y[-train_index]
lambda.grid = 10^seq(5,-6,length=1000)
head(lambda.grid)
ridge.fit=glmnet(x_t,y_t,alpha=0)
?glmnet
plot(ridge.fit)
plot(ridge.fit,lambda.grid)
plot(ridge.fit,xvar ='lambda')
ridge.cv = cv.glmnet(x_train,y_train,alpha=0,type.measure='mse',nfolds = 5)
ridge.cv = cv.glmnet(x_t,y_t,alpha=0,type.measure='mse',nfolds = 5)
plot(ridge.cv)
coef(ridge.cv,s='lambda.min')
?coef
ridge.predit = predict(ridge.cv,newx=x_test,s='lambda.min',exact=T)
plot(y_test,ridge.predit,xlim=c(0,2000),ylim=c(0,2000),pch=20,col='blue',xlab='Salary',ylab='Salary Predicted',main='Ridge Reg.')
lm.fit=lm(y~.,data=data.frame(y=y_t,x=x_t))
lm.predict = lm(y~.,data.frame(x=x_test))
lm.predict = predict.lm(y~.,data.frame(x=x_test))
lm.predict = predict.lm(y~.,data=data.frame(x=x_test))
lm.predict = predict.lm(lm.predict,data=data.frame(x=x_test))
lm.predict = predict.lm(lm.fit,data=data.frame(x=x_test))
points(y_test,lm.predict,xlim=c(0,2000),ylim=c(0,2000),pch=21,col='red')
points(y_test,lm.predict,xlim=c(0,2000),ylim=c(0,2000),pch=21,col='red')
head(lm.predict)
source('~/Desktop/FYP/sim_svvg.r')
data = sim_svvg(0.5)
data = sim_svvg(2)
source('~/Desktop/FYP/sim_svvg.r')
data = sim_svvg(1)
source('~/Desktop/FYP/sim_svvg.r')
data = sim_svvg(1)
source('~/Desktop/FYP/sim_svvg.r')
rgamma(200,1,1/250)
source('~/Desktop/FYP/sim_svvg.r')
rgamma(200,1/250,1)
rgamma(200,1,1)
rgamma(200,1,250)
source('~/Desktop/FYP/sim_svvg.r')
data = sim_svvg(1)
source('~/Desktop/FYP/sim_svvg.r')
data = sim_svvg(1)
source('~/Desktop/FYP/sim_svvg.r')
data = sim_svvg(1)
source('~/Desktop/FYP/sim_svvg.r')
data = sim_svvg(1)
source('~/Desktop/FYP/sim_svvg.r')
data = sim_svvg(1)
source('~/Desktop/FYP/sim_svvg.r')
data = sim_svvg(1)
source('~/Desktop/FYP/sim_svvg.r')
source('~/Desktop/FYP/sim_svvg.r')
data = sim_svvg(1)
source('~/Desktop/FYP/sim_svvg.r')
data = sim_svvg(1)
source('~/Desktop/FYP/sim_svvg.r')
data = sim_svvg(1)
data = sim_svvg(1)
data = sim_svvg(1)
data = sim_svvg(0.5)
data = sim_svvg(0.5)
data = sim_svvg(0.5)
data = sim_svvg(0.5)
data = sim_svvg(0.5)
data = sim_svvg(0.5)
source('~/Desktop/FYP/sim_svvg.r')
data = sim_svvg(0.5)
data = sim_svvg(0.5)
data = sim_svvg(0.5)
data = sim_svvg(0.5)
output = data$y
?write.csv
write.csv(output,file='data.csv')
data = read.table('~/Desktop/output.csv',header=T)
apply(data,2,summary)
head(data)
?read.csv
data = read.csv('~/Desktop/output.csv',header=T)
apply(data,2,summary)
mean(data$norm_w)
sum(data$norm_w)
mean(data$mu*data$norm_w)
source('~/Desktop/FYP/sim_svvg.r')
source('~/Desktop/FYP/sim_svvg.r')
o = sim_svvg(0.5)
write.csv(o$y,'~/Desktop/data.csv')
source('~/Desktop/FYP/sim_svvg.r')
source('~/Desktop/FYP/sim_svvg.r')
o = sim_svvg(0.5)
o = sim_svvg(0.5)
write.csv(o$y,'~/Desktop/data.csv')
o = read.csv('~/Desktop/output1.csv',header=T)
apply(o,2,summary)
o1 = read.csv('~/Desktop/output1.csv',header=T)
o = read.csv('~/Desktop/output.csv',header=T)
apply(o,2,summary)
apply(o,2,hist)
hist(o$mu)
?hist
hist(o$mu,freq=50)
hist(o$mu,freq=10)
hist(o$mu,freq=0.001)
hist(o$mu,breaks=50)
hist(o$mu,breaks=10)
hist(o$mu,breaks=100)
abline(0.03,col='blue',lwd=2)
abline(v=0.03,col='blue',lwd=2)
abline(v=0.03,col='blue',lwd=5)
hist(o$mu,breaks=100)
hist(o$mu,breaks=100,xlim=c(0,0.05))
hist(o$mu,breaks=100,xlim=c(0.02,0.05))
abline(v=0.03,col='red',lwd=5)
hist(o$sigma_v,breaks=100)
hist(o$s_v,breaks=100)
abline(v=0.1,col='red',lwd=2)
hist(o$s_v,breaks=100,xlim=c(0.09,0.13))
abline(v=0.1,col='red',lwd=2)
hist(o$gam,breaks=100,xlim=c(0.02,0.08))
hist(o$gam,breaks=100)
abline(v=0.05,col='red',lwd=2)
abline(v=0.05,col='red',lwd=5)
hist(o$k,breaks=100)
abline(v=0.55,col='red',lwd=5)
hist(o$rho,breaks=100)
ablibe(v=-0.1,col='red',lwd=3)
abline(v=-0.1,col='red',lwd=3)
hist(o$s_j,breaks=100)
abline(v=0.25,col='red',lwd=3)
rgamma(1000,1,250)
da= rgamma(1000,1,250)
summary(da)
o = read.csv('~/Desktop/output_final.csv',header=T)
head(o)
mean(mu)
hist(o$mu,breaks=100)
hist(o$gam,breaks=100)
hist(o$sigma_j,breaks=100)
hist(o$sigma_v,breaks=100)
hist(o$k,breaks=100)
hist(o$rho,breaks=100)
hist(o$v,breaks=100)
mean(o$v*o$norm_w)
hist(o$sigma_j,breaks=100)
hist(o$rho,breaks=100)
hist(o$k,breaks=100)
hist(o$v,breaks=100)
o = read.csv('~/Desktop/output_final.csv',header=T)
hist(o$mu,breaks=100)
hist(o$k,breaks=100)
hist(o$v,breaks=100)
hist(o$sigma_v,breaks=100)
hist(o$rho,breaks=100)
hist(o$gam,breaks=100)
hist(o$sigma_j,breaks=100)
source('~/Desktop/FYP/sim_svvg.r')
data = sim_svvg(0.5)
data = sim_svvg(0.5)
source('~/Desktop/FYP/sim_svvg.r')
data = sim_svvg(0.5)
source('~/Desktop/FYP/sim_svvg.r')
data = sim_svvg(0.5)
data = sim_svvg(0.5)
write.csv(data$y,'~/Desktop/data.csv')
source('~/Desktop/FYP/sim_svvg.r')
data = sim_svvg(0.5)
data = sim_svvg(0.5)
data = sim_svvg(0.5)
write.csv(data$y,'~/Desktop/data.csv')
o = read.csv('~/Desktop/output_final.csv',header=T)
o = read.csv('~/Desktop/output.csv',header=T)
hist(o$mu,breaks=100)
hist(o$k,breaks=100)
hist(o$v,breaks=100)
hist(o$sigma_v,breaks=100)
hist(o$rho,breaks=100)
hist(o$gam,breaks=100)
hist(o$sigma_j,breaks=100)
source('~/Desktop/smc/SP500/getdata_SPX.R')
para = get_graphs(2280)
setwd('~/Desktop/smc/SP500/')
para = get_graphs(2280)
source('~/Desktop/smc/SP500/getdata_SPX.R')
sig = get_sig_vol(para,data=GSPC)
p = trade_stats(signal=sig,data=GSPC)
plot(p$eq,type='l')
eq = p$eq
eq = eq[2:length(eq)]/eq[1:length(eq)-1]-1
t = xts(eq,index(GSPC)[2:2309])
SharpeRatio(t)
sd(eq)
StdDev(t)
Return.annualized(t)
mean(t)
mean(t)/sd(t)
source('~/Desktop/smc/SP500/getdata_SPX.R')
source('~/Desktop/smc/SP500/getdata_SPX.R')
source('~/Desktop/smc/SP500/getdata_SPX.R')
new_car = max_carmdd_trail(GSPC,para)
source('~/Desktop/smc/SP500/getdata_SPX.R')
new_car = max_carmdd_trail(GSPC,para)
source('~/Desktop/smc/SP500/getdata_SPX.R')
new_car = max_carmdd_trail(GSPC,para)
source('~/Desktop/smc/SP500/getdata_SPX.R')
new_car = max_carmdd_trail(GSPC,para)
new_car
library(lattice)
levelplot(z=new_car)
?levelplot
x = seq(1,10,by=1)
y = seq(0.1,2,by=0.1)
grid = expand.grid(x=x,y=y)
grid$z = new_car
grid$z = as.vector(new_car)
levelplot(z~x*y,grid)
levelplot(z~x*y,grid,levels=100)
sig = get_sig_vol(para=para,data=data,vol_lb=7,rolling_vol=2,from=1,to=final)
sig = get_sig_vol(para=para,data=GSPC,vol_lb=7,rolling_vol=2,from=1,to=final)
sig = get_sig_vol(para=para,data=GSPC,vol_lb=7,rolling_vol=2,from=1,to=500)
p = trade_stats(signal=sig,data=data,trail=6,sl_fac=0.1)
p = trade_stats(signal=sig,data=GSPC,trail=6,sl_fac=0.1)
plot(p$eq,type='l')
plot(p$after,type'l')
plot(p$after,type='l')
sig_test = get_sig_vol(para=para,data=GSPC,vol_lb=7,rolling_vol=2)
p_test = trade_stats(signal=sig_test,data=GSPC,trail=6,sl_fac = 0.1)
plot(p_test$eq,type='l')
eq = p_test$eq
eq = eq[2:length(eq)]/eq[1:length(eq)-1]-1
t = xts(eq,index(GSPC)[2:500])
eq = p_test$eq
eq = eq[2:length(eq)]/eq[1:length(eq)-1]-1
t = xts(eq,index(GSPC)[2:2309])
coredata(Return.annualized(t)/maxDrawdown(t))
maxDrawdown(t)
source('~/Desktop/smc/SP500/getdata_SPX.R')
new_car = max_carmdd_trail(GSPC,para)
grid$z = as.vector(new_car)
levelplot(z~x*y,grid,levels=100)
levelplot(z~x*y,grid,levels=100,xlab = 'Trailing Stop Loss Lookback',ylab='Initial Hard Stop Loss Factor',main='Optimization Curve with <10% Drawdown')
max(grid$z)
which(max(grid$z)()
)
which(max(grid$z)
)
which(new_car == max(new_car), arr.ind = TRUE)
sig_test = get_sig_vol(para=para,data=GSPC)
p_test = trade_stats(signal=sig_test,data=GSPC,trail=8,sl_fac=1.4)
plot(p_test$eq,type='l')
plot(p_test$eq,type='l',main='Equity vs Time (Training + Test)',xlab='Time',ylab='Equity')
eq = p_test$eq
eq = eq[2:length(eq)]/eq[1:length(eq)-1]-1
t = xts(eq,index(GSPC)[2:2309])
maxDrawdown(t)
Return.annualized(t)
Return.annualized(t)/maxDrawdown(t)
SharpeRatio(t)
source('~/Desktop/smc/SP500/getdata_SPX.R')
sig_test = get_sig_vol(para=para,data=GSPC)
p_test = trade_stats(signal=sig_test,data=GSPC,trail=8,sl_fac=1.4)
plot(p_test$eq,type='l')
source('~/Desktop/smc/SP500/getdata_SPX.R')
p_test = trade_stats(signal=sig_test,data=GSPC,trail=8,sl_fac=1.4)
plot(p_test$eq,type='l')
lines(p_test$low,col='red')
source('~/Desktop/smc/SP500/getdata_SPX.R')
p_test = trade_stats(signal=sig_test,data=GSPC,trail=8,sl_fac=1.4)
source('~/Desktop/smc/SP500/getdata_SPX.R')
p_test = trade_stats(signal=sig_test,data=GSPC,trail=8,sl_fac=1.4)
source('~/Desktop/smc/SP500/getdata_SPX.R')
p_test = trade_stats(signal=sig_test,data=GSPC,trail=8,sl_fac=1.4)
source('~/Desktop/smc/SP500/getdata_SPX.R')
p_test = trade_stats(signal=sig_test,data=GSPC,trail=8,sl_fac=1.4)
source('~/Desktop/smc/SP500/getdata_SPX.R')
p_test = trade_stats(signal=sig_test,data=GSPC,trail=8,sl_fac=1.4)
plot(p_test$eq,type='l')
source('~/Desktop/smc/SP500/getdata_SPX.R')
sum(p$profit>0)
sum(p$profit<0)
length(p$profit)
source('~/Desktop/smc/SP500/getdata_SPX.R')
p_test = trade_stats(signal=sig_test,data=GSPC,trail=8,sl_fac=1.4)
sum(p$profit>0)
plot(p$eq,type='l')
sig = get_sig_vol(para=para,data=GSPC)
p_test = trade_stats(signal=sigt,data=GSPC,trail=8,sl_fac=1.4)
p_test = trade_stats(signal=sig,data=GSPC,trail=8,sl_fac=1.4)
plot(p$eq,type='l')
plot(p_test$eq,type='l')
sum(p$profit>0)
sum(p_test$profit>0)
sum(p_test$profit<0)
sum(p_test$profit)
length(p_test$profit)
mean(p_test$length)
plot(p_test$after,type='l')
source('~/Desktop/smc/SP500/getdata_SPX.R')
source('~/Desktop/smc/SP500/getdata_SPX.R')
sig_train = get_sig_vol(para=para,data=GSPC,to=500)
p_train = trade_stats(signal=sig_train,data=GSPC,sl_fac=1.4,trail=8)
plot(p_train$eq,type='l')
car = max_carmdd(data=GSPC,para=para)
head(car)
car = max_carmdd(data=GSPC,para=para)
source('~/Desktop/smc/SP500/getdata_SPX.R')
car = max_carmdd(data=GSPC,para=para)
